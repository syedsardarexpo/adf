{
	"name": "pl_metadata_framework_7_failure run",
	"properties": {
		"description": "clone of 6.\n1)creating unified config and watermark table\n2)new sp to update config table : [dbo].[update_config_status_2] ",
		"activities": [
			{
				"name": "List tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azuresql_dyanamic_tables",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "config_watermark",
							"schema": "dbo"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "List tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('List tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().processed,'N')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Switch between FL and inc",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@string(item().table_type)",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "full_load",
													"activities": [
														{
															"name": "Copy data full load",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "AzureSqlSource",
																	"additionalColumns": [
																		{
																			"name": "UpdateTime",
																			"value": {
																				"value": "@utcNow()",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "PipelineName",
																			"value": {
																				"value": "@pipeline().Pipeline",
																				"type": "Expression"
																			}
																		}
																	],
																	"queryTimeout": "02:00:00",
																	"partitionOption": "None"
																},
																"sink": {
																	"type": "ParquetSink",
																	"storeSettings": {
																		"type": "AzureBlobFSWriteSettings"
																	},
																	"formatSettings": {
																		"type": "ParquetWriteSettings"
																	}
																},
																"enableStaging": false,
																"translator": {
																	"type": "TabularTranslator",
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "ds_azuresql_dyanamic_tables",
																	"type": "DatasetReference",
																	"parameters": {
																		"table_name": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"schema": {
																			"value": "@item().schema_name",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "ds_adls_dynamic_FL",
																	"type": "DatasetReference",
																	"parameters": {
																		"table_name": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"destination": {
																			"value": "@item().destination",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"name": "Successful Audit update FL",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data full load",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[usp_update_Audit_log]",
																"storedProcedureParameters": {
																	"Errors": {
																		"value": {
																			"value": "@activity('Copy data full load').output.errors",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"ExecDate": {
																		"value": {
																			"value": "@utcNow()",
																			"type": "Expression"
																		},
																		"type": "Datetime"
																	},
																	"PipelineName": {
																		"value": {
																			"value": "@pipeline().Pipeline",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"PipelineRunID": {
																		"value": {
																			"value": "@pipeline().RunId",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Processed": {
																		"value": "Y",
																		"type": "String"
																	},
																	"RowsCopied": {
																		"value": {
																			"value": "@activity('Copy data full load').output.rowsCopied",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"RowsRead": {
																		"value": {
																			"value": "@activity('Copy data full load').output.rowsRead",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"Source": {
																		"value": "need to code",
																		"type": "String"
																	},
																	"TableName": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Target": {
																		"value": {
																			"value": "@item().destination",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														},
														{
															"name": "Unsuccessful Audit update FL",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data full load",
																	"dependencyConditions": [
																		"Failed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[usp_update_Audit_log]",
																"storedProcedureParameters": {
																	"Errors": {
																		"value": {
																			"value": "@activity('Copy data full load').output.errors",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"ExecDate": {
																		"value": {
																			"value": "@utcNow()",
																			"type": "Expression"
																		},
																		"type": "Datetime"
																	},
																	"PipelineName": {
																		"value": {
																			"value": "@pipeline().Pipeline",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"PipelineRunID": {
																		"value": {
																			"value": "@pipeline().RunId",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Processed": {
																		"value": "N",
																		"type": "String"
																	},
																	"RowsCopied": {
																		"value": {
																			"value": "@activity('Copy data full load').output.rowsCopied",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"RowsRead": {
																		"value": {
																			"value": "@activity('Copy data full load').output.rowsRead",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"Source": {
																		"value": "need to code",
																		"type": "String"
																	},
																	"TableName": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Target": {
																		"value": {
																			"value": "@item().destination",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														},
														{
															"name": "Successful update config",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data full load",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[update_config_status_2]",
																"storedProcedureParameters": {
																	"processed": {
																		"value": "Y",
																		"type": "String"
																	},
																	"tablename": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														}
													]
												},
												{
													"value": "incremental",
													"activities": [
														{
															"name": "Copy data incremental",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "AzureSqlSource",
																	"additionalColumns": [
																		{
																			"name": "UpdateTime",
																			"value": {
																				"value": "@utcNow()",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "PipelineName",
																			"value": {
																				"value": "@pipeline().Pipeline",
																				"type": "Expression"
																			}
																		}
																	],
																	"sqlReaderQuery": {
																		"value": "DECLARE @IncrementType VARCHAR(10);\n\n-- Determine if the table uses ID or Timestamp for increment\nSELECT @IncrementType = \n    CASE \n        WHEN Non_timestamp_col IS NOT NULL THEN 'ID'\n        WHEN Timestamp_col IS NOT NULL THEN 'Timestamp'\n    END\nFROM [dbo].[config_watermark] \nWHERE table_name = '@{item().table_name}';\n\nIF @IncrementType = 'ID'\nBEGIN\n    --PRINT 'Using ID-based Increment';\n    SELECT * FROM @{item().table_name} WHERE @{item().Incremental_key} > \n        (SELECT CAST(Non_timestamp_col AS INT) FROM config_watermark WHERE table_name = '@{item().table_name}');\nEND\nELSE IF @IncrementType = 'Timestamp'\nBEGIN\n    --PRINT 'Using Timestamp-based Increment';\n    SELECT * FROM @{item().table_name} WHERE @{item().Incremental_key} > \n        (SELECT Timestamp_col FROM config_watermark WHERE table_name = '@{item().table_name}');\nEND\nELSE\nBEGIN\n    PRINT 'No valid watermark found!';\nEND\n",
																		"type": "Expression"
																	},
																	"queryTimeout": "00:12:00",
																	"partitionOption": "None"
																},
																"sink": {
																	"type": "ParquetSink",
																	"storeSettings": {
																		"type": "AzureBlobFSWriteSettings"
																	},
																	"formatSettings": {
																		"type": "ParquetWriteSettings"
																	}
																},
																"enableStaging": false,
																"translator": {
																	"type": "TabularTranslator",
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "ds_azuresql_dyanamic_tables",
																	"type": "DatasetReference",
																	"parameters": {
																		"table_name": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"schema": {
																			"value": "@item().schema_name",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "ds_adls_dynamic_inc",
																	"type": "DatasetReference",
																	"parameters": {
																		"table_name": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"destination": {
																			"value": "@item().destination",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"name": "Successful Audit update",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data incremental",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[usp_update_Audit_log]",
																"storedProcedureParameters": {
																	"Errors": {
																		"value": {
																			"value": "@activity('Copy data incremental').output.errors",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"ExecDate": {
																		"value": {
																			"value": "@utcNow()",
																			"type": "Expression"
																		},
																		"type": "Datetime"
																	},
																	"PipelineName": {
																		"value": {
																			"value": "@pipeline().Pipeline",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"PipelineRunID": {
																		"value": {
																			"value": "@pipeline().RunId",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Processed": {
																		"value": "Y",
																		"type": "String"
																	},
																	"RowsCopied": {
																		"value": {
																			"value": "@activity('Copy data incremental').output.rowsCopied",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"RowsRead": {
																		"value": {
																			"value": "@activity('Copy data incremental').output.rowsRead",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"Source": {
																		"value": "need to code",
																		"type": "String"
																	},
																	"TableName": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Target": {
																		"value": {
																			"value": "@item().destination",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														},
														{
															"name": "UnSuccessful Audit update",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data incremental",
																	"dependencyConditions": [
																		"Failed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[usp_update_Audit_log]",
																"storedProcedureParameters": {
																	"Errors": {
																		"value": {
																			"value": "@activity('Copy data incremental').output.errors",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"ExecDate": {
																		"value": {
																			"value": "@utcNow()",
																			"type": "Expression"
																		},
																		"type": "Datetime"
																	},
																	"PipelineName": {
																		"value": {
																			"value": "@pipeline().Pipeline",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"PipelineRunID": {
																		"value": {
																			"value": "@pipeline().RunId",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Processed": {
																		"value": "N",
																		"type": "String"
																	},
																	"RowsCopied": {
																		"value": {
																			"value": "@if(contains(activity('Copy data incremental').output, 'rowsCopied'), activity('Copy data incremental').output.rowsCopied, null)\n",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"RowsRead": {
																		"value": {
																			"value": "@if(contains(activity('Copy data incremental').output, 'rowsCopied'), activity('Copy data incremental').output.rowsRead, null)\n",
																			"type": "Expression"
																		},
																		"type": "Decimal"
																	},
																	"Source": {
																		"value": "need to code",
																		"type": "String"
																	},
																	"TableName": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"Target": {
																		"value": {
																			"value": "@item().destination",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														},
														{
															"name": "update watermark",
															"type": "Script",
															"dependsOn": [
																{
																	"activity": "Copy data incremental",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															},
															"typeProperties": {
																"scripts": [
																	{
																		"type": "Query",
																		"text": {
																			"value": "DECLARE @IncrementType VARCHAR(10);\n\n-- Determine if the table uses ID or Timestamp for increment\nSELECT @IncrementType = \n    CASE \n        WHEN Non_timestamp_col IS NOT NULL THEN 'ID'\n        WHEN Timestamp_col IS NOT NULL THEN 'Timestamp'\n    END\nFROM [dbo].[config_watermark] \nWHERE table_name = '@{item().table_name}';\n\nIF @IncrementType = 'ID'\nBEGIN\n    \nUPDATE config_watermark\nSET Non_timestamp_col = (SELECT MAX(@{item().Incremental_key}) FROM @{item().table_name})\nwhere table_name = '@{item().table_name}'\t\n\nEND\nELSE IF @IncrementType = 'Timestamp'\nBEGIN\n    \nUPDATE config_watermark\nSET Timestamp_col = (SELECT MAX(@{item().Incremental_key}) FROM @{item().table_name})\nwhere table_name = '@{item().table_name}'\n\nEND\nELSE\nBEGIN\n    PRINT 'No valid watermark found!';\nEND\n",
																			"type": "Expression"
																		}
																	}
																],
																"scriptBlockExecutionTimeout": "02:00:00"
															}
														},
														{
															"name": "Successful update config inc",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Copy data incremental",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[update_config_status_2]",
																"storedProcedureParameters": {
																	"processed": {
																		"value": "Y",
																		"type": "String"
																	},
																	"tablename": {
																		"value": {
																			"value": "@item().table_name",
																			"type": "Expression"
																		},
																		"type": "String"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "ls_sqldatabase",
																"type": "LinkedServiceReference"
															}
														}
													]
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}